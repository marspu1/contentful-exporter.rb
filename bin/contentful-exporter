#!/usr/bin/env ruby

require 'escort'
require_relative '../lib/contentful/exporter/cli'

fail ArgumentError, 'Set the path to the configuration file and define an action. More information can be found in the README.' if ARGF.argv.empty?
fail ArgumentError, "Missing '--config-file' argument. Usage: 'contentful-exporter --config-file PATH_TO_CONFIGURATION_FILE --action'." unless ARGV.include?('--config-file')

Escort::App.create do |app|
  app.summary 'Executable file of Generic-exporter Gem'

  app.options do |opts|
    opts.opt :file, '--config-file', short: '-f', long: '--config-file', type: :string

    app.command '--export-content-types' do |command|
      command.summary 'Find an existing Space or create new one. Export content types from Contentful platform'
      command.requires_arguments false
      command.options do |options|
        options.opt :space_id, 'space_id', short: '-s', long: '--space_id', type: :string
        options.opt :space_name, 'space_name', short: :none, long: '--space_name', type: :string
      end
      command.action do |options, arguments|
        Contentful::Exporter::CLI.new(options, arguments).execute
      end
    end
    app.command '--export' do |command|
      command.summary 'Export entries from the Contentful platform'
      command.action do |options, arguments|
        Contentful::Exporter::CLI.new(options, arguments).execute
      end
    end
    app.command '--export-assets' do |command|
      command.summary 'Export only assets'
      command.action do |options, arguments|
        Contentful::Exporter::CLI.new(options, arguments).execute
      end
    end
    app.command '--export-entries' do |command|
      command.summary 'Export only entries'
      command.action do |options, arguments|
        Contentful::Exporter::CLI.new(options, arguments).execute
      end
    end
    app.command '--test-credentials' do |command|
      command.summary 'Check your Contentful-management credentials'
      command.action do |options, arguments|
        Contentful::Exporter::CLI.new(options, arguments).execute
      end
    end
  end
end
